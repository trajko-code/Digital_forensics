# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Get_data_from_device_dialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

from source.adb_commands import *
from source.utils import Data_type


class Ui_Get_data_from_device_dialog(object):
    def setupUi(self, Get_data_from_device_dialog):
        Get_data_from_device_dialog.setObjectName("Get_data_from_device_dialog")
        Get_data_from_device_dialog.resize(464, 287)
        self.verticalLayout = QtWidgets.QVBoxLayout(Get_data_from_device_dialog)
        self.verticalLayout.setContentsMargins(15, 15, 15, 15)
        self.verticalLayout.setSpacing(15)
        self.verticalLayout.setObjectName("verticalLayout")
        self.groupBox = QtWidgets.QGroupBox(Get_data_from_device_dialog)
        self.groupBox.setObjectName("groupBox")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.groupBox)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.checkBoxCalls = QtWidgets.QCheckBox(self.groupBox)
        self.checkBoxCalls.setObjectName("checkBoxCalls")
        self.horizontalLayout_2.addWidget(self.checkBoxCalls)
        self.checkBoxContacts = QtWidgets.QCheckBox(self.groupBox)
        self.checkBoxContacts.setObjectName("checkBoxContacts")
        self.horizontalLayout_2.addWidget(self.checkBoxContacts)
        self.verticalLayout.addWidget(self.groupBox)
        self.label = QtWidgets.QLabel(Get_data_from_device_dialog)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.listView = QtWidgets.QListView(Get_data_from_device_dialog)
        self.listView.setObjectName("listView")
        self.verticalLayout.addWidget(self.listView)
        self.buttonBox = QtWidgets.QDialogButtonBox(Get_data_from_device_dialog)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.verticalLayout.addWidget(self.buttonBox)

        self.retranslateUi(Get_data_from_device_dialog)
        self.buttonBox.rejected.connect(Get_data_from_device_dialog.reject) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(Get_data_from_device_dialog)

# Manually changed
        self.buttonBox.accepted.connect(self.check_inputs)
        self.parentDialog = Get_data_from_device_dialog

        self.selected_item = None

        self.fill_list_view()

        self.listView.selectionModel().selectionChanged.connect(self.handle_selection_changed)
        self.listView.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)

    def retranslateUi(self, Get_data_from_device_dialog):
        _translate = QtCore.QCoreApplication.translate
        Get_data_from_device_dialog.setWindowTitle(_translate("Get_data_from_device_dialog", "Get data from device"))
        self.groupBox.setTitle(_translate("Get_data_from_device_dialog", "Data"))
        self.checkBoxCalls.setText(_translate("Get_data_from_device_dialog", "Calls"))
        self.checkBoxContacts.setText(_translate("Get_data_from_device_dialog", "Contacts"))
        self.label.setText(_translate("Get_data_from_device_dialog", "Devices"))

    def fill_list_view(self):
        entries = ADB_commands.getConnectedDevices()

        model = QtGui.QStandardItemModel()
        self.listView.setModel(model)

        for i in entries:
            item = QtGui.QStandardItem(i)
            model.appendRow(item)

    def get_data_from_device(self):
        if not (self.checkBoxCalls.isChecked() or self.checkBoxContacts.isChecked()):
            raise Exception("Logic error")

        if self.selected_item is None:
            raise Exception("Logic error")

        data_from_device = []
        if self.checkBoxCalls.isChecked():
            data = ADB_commands.getData(self.selected_item.text(), CALLS_PROVIDER)
            data_from_device.append([data[0], Data_type.CALL, data[1]])

        if self.checkBoxContacts.isChecked():
            data = ADB_commands.getData(self.selected_item.text(), CONTACTS_PROVIDER)
            data_from_device.append([data[0], Data_type.CONTACTS, data[1]])

        return data_from_device

    def handle_selection_changed(self):
        index = self.listView.selectedIndexes()[0]
        self.selected_item = self.listView.model().itemFromIndex(index)

    def check_inputs(self):
        if self.validation_ok():
            self.parentDialog.accept()

    def validation_ok(self):
        if self.checkBoxCalls.isChecked() or self.checkBoxContacts.isChecked():
            if self.selected_item is None:
                print("No device selected")
                return False
            else:
                return True
        else:
            print("No data type selected")
            return False




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Get_data_from_device_dialog = QtWidgets.QDialog()
    ui = Ui_Get_data_from_device_dialog()
    ui.setupUi(Get_data_from_device_dialog)
    Get_data_from_device_dialog.show()
    sys.exit(app.exec_())
