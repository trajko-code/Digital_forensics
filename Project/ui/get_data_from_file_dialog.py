# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Get_data_from_file_dialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

from source.utils import *
import os


class Ui_Get_data_from_file_dialog(object):
    def setupUi(self, Get_data_from_file_dialog):
        Get_data_from_file_dialog.setObjectName("Get_data_from_file_dialog")
        Get_data_from_file_dialog.resize(386, 279)
        self.verticalLayout = QtWidgets.QVBoxLayout(Get_data_from_file_dialog)
        self.verticalLayout.setContentsMargins(15, 15, 15, 15)
        self.verticalLayout.setSpacing(20)
        self.verticalLayout.setObjectName("verticalLayout")
        self.groupBoxFile = QtWidgets.QGroupBox(Get_data_from_file_dialog)
        self.groupBoxFile.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.groupBoxFile.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.groupBoxFile.setObjectName("groupBoxFile")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.groupBoxFile)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.radioButtonCalls = QtWidgets.QRadioButton(self.groupBoxFile)
        self.radioButtonCalls.setObjectName("radioButtonCalls")
        self.horizontalLayout.addWidget(self.radioButtonCalls)
        self.radioButtonContacts = QtWidgets.QRadioButton(self.groupBoxFile)
        self.radioButtonContacts.setObjectName("radioButtonContacts")
        self.horizontalLayout.addWidget(self.radioButtonContacts)
        self.verticalLayout.addWidget(self.groupBoxFile)
        self.listViewFile = QtWidgets.QListView(Get_data_from_file_dialog)
        self.listViewFile.setObjectName("listViewFile")
        self.verticalLayout.addWidget(self.listViewFile)
        self.buttonBox = QtWidgets.QDialogButtonBox(Get_data_from_file_dialog)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.verticalLayout.addWidget(self.buttonBox)

        self.retranslateUi(Get_data_from_file_dialog)
        self.buttonBox.rejected.connect(Get_data_from_file_dialog.reject) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(Get_data_from_file_dialog)

# Manually changed
        self.radioButtonCalls.setChecked(True)
        self.radioButtonCalls.clicked.connect(self.fill_list_view)
        self.radioButtonContacts.clicked.connect(self.fill_list_view)

        self.buttonBox.accepted.connect(self.check_inputs)
        self.parentDialog = Get_data_from_file_dialog

        self.path_to_contacts_provider = os.path.abspath(os.path.dirname( __file__ )) + "/../exported_data/com.android.contacts/"
        self.path_to_calls_provider = os.path.abspath(os.path.dirname( __file__ )) + "/../exported_data/" + CUSTOM_PROVIDER_NAME + "/"
        self.selected_item = None

        self.model = QtGui.QStandardItemModel()
        self.listViewFile.setModel(self.model)

        self.fill_list_view()

        self.listViewFile.selectionModel().selectionChanged.connect(self.handle_selection_changed)
        self.listViewFile.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)

    def retranslateUi(self, Get_data_from_file_dialog):
        _translate = QtCore.QCoreApplication.translate
        Get_data_from_file_dialog.setWindowTitle(_translate("Get_data_from_file_dialog", "Get data from file"))
        self.groupBoxFile.setTitle(_translate("Get_data_from_file_dialog", "Data"))
        self.radioButtonCalls.setText(_translate("Get_data_from_file_dialog", "Calls"))
        self.radioButtonContacts.setText(_translate("Get_data_from_file_dialog", "Contacts"))

# Manually added
    def fill_list_view(self):
        if self.radioButtonCalls.isChecked():
            entries = os.listdir(self.path_to_calls_provider)
            entries = [k for k in entries if 'calls' in k]
            entries = [k for k in entries if os.path.exists(self.path_to_calls_provider + k + "/" + CSV_FILE_NAME)]
        elif self.radioButtonContacts.isChecked():
            entries = os.listdir(self.path_to_contacts_provider)
            entries = [k for k in entries if 'contacts' in k]
            entries = [k for k in entries if os.path.exists(self.path_to_contacts_provider + k + "/" + CSV_FILE_NAME)]
        else:
            raise Exception("Radio buttons not checked")


        self.model.clear()
        self.selected_item = None
        for i in entries:
            item = QtGui.QStandardItem(i)
            self.model.appendRow(item)

    def get_file_path(self):
        if self.radioButtonCalls.isChecked():
            return [Data_type.CALL, self.path_to_calls_provider + self.selected_item.text() + "/" + CSV_FILE_NAME]
        elif self.radioButtonContacts.isChecked():
            return [Data_type.CONTACTS, self.path_to_contacts_provider + self.selected_item.text() + "/" + CSV_FILE_NAME]
        else:
            raise Exception("Logic error")

    def handle_selection_changed(self):
        index = self.listViewFile.selectedIndexes()[0]
        self.selected_item = self.listViewFile.model().itemFromIndex(index)

    def check_inputs(self):
        if self.validation_ok():
            self.parentDialog.accept()
        else:
            print("File not selected")

    def validation_ok(self):
        if self.selected_item is not None:
            return True

        return False






if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Get_data_from_file_dialog = QtWidgets.QDialog()
    ui = Ui_Get_data_from_file_dialog()
    ui.setupUi(Get_data_from_file_dialog)
    Get_data_from_file_dialog.show()
    sys.exit(app.exec_())
